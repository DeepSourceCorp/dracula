name: pydracula

on:
  push:
    tags:
      - '*'
  workflow_dispatch:

jobs: # credits for workflow from https://github.com/messense/crfs-rs/blob/main/.github/workflows/Python.yml


  linux:
    runs-on: [self-hosted, charmander]
    strategy:
      matrix:
        target: [x86_64, i686]
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: 3.9
        architecture: x64
    - name: Build wheels
      uses: PyO3/maturin-action@v1
      with:
        target: ${{ matrix.target }}
        manylinux: auto
        args: --release --out dist -m pydracula/Cargo.toml
    - name: Install built wheel
      if: matrix.target == 'x86_64'
      run: |
          pip install ./dist/pydracula-*.whl --force-reinstall
          python -c "import pydracula; pydracula.Lang"
    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        name: wheels-linux
        path: dist


  musllinux:
    runs-on: [self-hosted, charmander]
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-musl
          - i686-unknown-linux-musl
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: 3.9
        architecture: x64
    - name: Build wheels
      uses: PyO3/maturin-action@v1
      with:
        target: ${{ matrix.target }}
        manylinux: musllinux_1_2
        args: --release --out dist -m pydracula/Cargo.toml
    - name: Install built wheel
      if: matrix.target == 'x86_64-unknown-linux-musl'
      uses: addnab/docker-run-action@v3
      with:
        image: alpine:latest
        options: -v ${{ github.workspace }}:/io -w /io
        run: |
          apk add py3-pip
          pip3 install -U pip
          pip install ./dist/pydracula-*.whl --force-reinstall
          python -c "import pydracula; pydracula.Lang"
    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        name: wheels-musllinux
        path: dist


  release:
    name: Release
    runs-on: [self-hosted, charmander]
    needs: [ linux, musllinux ]
    steps:
      - uses: actions/download-artifact@v3 # download all artifacts
      - uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          pip install --upgrade twine
          pushd wheels-musllinux
          twine upload --skip-existing *
          popd
          pushd wheels-linux
          twine upload --skip-existing *
          popd
